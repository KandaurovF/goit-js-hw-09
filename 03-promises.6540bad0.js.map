{"mappings":"C,A,W,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,Q,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,K,E,Q,E,E,S,E,O,C,I,E,A,M,uB,E,I,O,E,K,mB,C,C,E,S,S,C,C,C,E,C,C,E,C,C,E,E,kB,G,I,E,E,SCEA,IAAM,EAAO,CACX,KAAM,SAAS,cAAc,SAC7B,gBAAiB,SAAS,cAAc,uBACxC,UAAW,SAAS,cAAc,sBAClC,YAAa,SAAS,cAAc,uBACtC,EAEA,EAAK,KAAK,iBAAiB,SAE3B,SAAwB,CAAK,EAC3B,EAAM,iBAEN,GAAM,CAAA,gBAAE,CAAA,CAAe,UAAE,CAAA,CAAS,YAAE,CAAA,CAAa,CAAG,EAChD,EAAW,EACX,EAAQ,OAAO,EAAgB,OAEnC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAY,MAAO,IACrC,AAqBJ,CAAA,SAAuB,CAAQ,CAAE,CAAK,EACpC,OAAO,IAAI,QAAQ,CAAC,EAAS,KAC3B,IAAM,EAAgB,KAAK,SAAW,GACtC,WAAW,KACL,EACF,EAAQ,CAAE,SAAA,EAAU,MAAA,CAAM,GAE1B,EAAO,CAAE,SAAA,EAAU,MAAA,CAAM,EAE7B,EAAG,EACL,EACF,CAAA,EAhCkB,EAAU,GACrB,KAAK,CAAC,CAAA,SAAE,CAAA,CAAQ,MAAE,CAAA,CAAO,IACxB,QAAQ,IAAI,CAAC,oBAAoB,EAAE,EAAS,IAAI,EAAE,EAAM,EAAE,CAAC,EAC3D,AAAA,CAAA,EAAA,EAAA,MAAA,EAAO,QAAQ,CAAC,kBAAkB,EAAE,EAAS,IAAI,EAAE,EAAM,EAAE,CAAC,CAAE,CAC5D,aAAc,CAAA,EACd,QAAS,GACX,EACF,GACC,MAAM,CAAC,CAAA,SAAE,CAAA,CAAQ,MAAE,CAAA,CAAO,IACzB,QAAQ,IAAI,CAAC,mBAAmB,EAAE,EAAS,IAAI,EAAE,EAAM,EAAE,CAAC,EAC1D,AAAA,CAAA,EAAA,EAAA,MAAA,EAAO,QAAQ,CAAC,iBAAiB,EAAE,EAAS,IAAI,EAAE,EAAM,EAAE,CAAC,CAAE,CAC3D,aAAc,CAAA,EACd,QAAS,GACX,EACF,GAEF,GAAS,OAAO,EAAU,OAC1B,GAEJ,E","sources":["<anon>","src/js/03-promises.js"],"sourcesContent":["(function () {\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired7c6\"] = parcelRequire;\n}\n\nvar $h6c0i = parcelRequire(\"h6c0i\");\nconst $ce04d3a99e08e73b$var$refs = {\n    form: document.querySelector(\".form\"),\n    inputFirstDelay: document.querySelector('input[name=\"delay\"]'),\n    inputStep: document.querySelector('input[name=\"step\"]'),\n    inputAmount: document.querySelector('input[name=\"amount\"]')\n};\n$ce04d3a99e08e73b$var$refs.form.addEventListener(\"submit\", $ce04d3a99e08e73b$var$createPromises);\nfunction $ce04d3a99e08e73b$var$createPromises(event) {\n    event.preventDefault();\n    const { inputFirstDelay: inputFirstDelay , inputStep: inputStep , inputAmount: inputAmount  } = $ce04d3a99e08e73b$var$refs;\n    let position = 1;\n    let delay = Number(inputFirstDelay.value);\n    for(let i = 0; i < inputAmount.value; i++){\n        $ce04d3a99e08e73b$var$createPromise(position, delay).then(({ position: position , delay: delay  })=>{\n            console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n            (0, $h6c0i.Notify).success(`Fulfilled promise ${position} in ${delay}ms`, {\n                clickToClose: true,\n                timeout: 6000\n            });\n        }).catch(({ position: position , delay: delay  })=>{\n            console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n            (0, $h6c0i.Notify).failure(`Rejected promise ${position} in ${delay}ms`, {\n                clickToClose: true,\n                timeout: 6000\n            });\n        });\n        delay += Number(inputStep.value);\n        position++;\n    }\n}\nfunction $ce04d3a99e08e73b$var$createPromise(position, delay) {\n    return new Promise((resolve, reject)=>{\n        const shouldResolve = Math.random() > 0.3;\n        setTimeout(()=>{\n            if (shouldResolve) resolve({\n                position: position,\n                delay: delay\n            });\n            else reject({\n                position: position,\n                delay: delay\n            });\n        }, delay);\n    });\n} // function createPromise(position, delay) {\n //   const shouldResolve = Math.random() > 0.3;\n //   setTimeout(() => {\n //     if (shouldResolve) {\n //       resolve({ position, delay });\n //     } else {\n //       reject({ position, delay });\n //     }\n //   }, delay);\n // }\n\n})();\n//# sourceMappingURL=03-promises.6540bad0.js.map\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  inputFirstDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', createPromises);\n\nfunction createPromises(event) {\n  event.preventDefault();\n\n  const { inputFirstDelay, inputStep, inputAmount } = refs;\n  let position = 1;\n  let delay = Number(inputFirstDelay.value);\n\n  for (let i = 0; i < inputAmount.value; i++) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n          clickToClose: true,\n          timeout: 6000,\n        });\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n          clickToClose: true,\n          timeout: 6000,\n        });\n      });\n\n    delay += Number(inputStep.value);\n    position++;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   setTimeout(() => {\n//     if (shouldResolve) {\n//       resolve({ position, delay });\n//     } else {\n//       reject({ position, delay });\n//     }\n//   }, delay);\n// }\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$h6c0i","$ce04d3a99e08e73b$var$refs","form","document","querySelector","inputFirstDelay","inputStep","inputAmount","addEventListener","event","preventDefault","position","delay","Number","value","i","$ce04d3a99e08e73b$var$createPromise","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","console","log","Notify","success","clickToClose","timeout","catch","failure"],"version":3,"file":"03-promises.6540bad0.js.map"}